# coding: utf-8

"""
    staffing

    The Staffing REST APIs enable you to get and manage staffing information, such as jobs, job families, job profiles, supervisory organizations, worker check-ins, and job changes. The Staffing service also includes the /workers resource to access staffing information for non-terminated workers.    Related Information: - Administrator Guide: Setup Considerations: Job Changes

    The version of the OpenAPI document: v6
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from workday_staffing_python_sdk import schemas  # noqa: F401


class CheckInsSummaryB3a69f47a499100010ce6be72bfe001d(
    schemas.ComposedSchema,
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        
        class all_of_0(
            schemas.DictSchema
        ):
        
        
            class MetaOapg:
                
                class properties:
                    description = schemas.StrSchema
                    
                    
                    class associatedTopics(
                        schemas.ListSchema
                    ):
                    
                    
                        class MetaOapg:
                            
                            @staticmethod
                            def items() -> typing.Type['AssociatedTopicsSummaryB3a69f47a4991000171aae4c5a810040']:
                                return AssociatedTopicsSummaryB3a69f47a4991000171aae4c5a810040
                    
                        def __new__(
                            cls,
                            arg: typing.Union[typing.Tuple['AssociatedTopicsSummaryB3a69f47a4991000171aae4c5a810040'], typing.List['AssociatedTopicsSummaryB3a69f47a4991000171aae4c5a810040']],
                            _configuration: typing.Optional[schemas.Configuration] = None,
                        ) -> 'associatedTopics':
                            return super().__new__(
                                cls,
                                arg,
                                _configuration=_configuration,
                            )
                    
                        def __getitem__(self, i: int) -> 'AssociatedTopicsSummaryB3a69f47a4991000171aae4c5a810040':
                            return super().__getitem__(i)
                
                    @staticmethod
                    def creator() -> typing.Type['CreatorB3a69f47a49910001687de28dd71003d']:
                        return CreatorB3a69f47a49910001687de28dd71003d
                    archived = schemas.BoolSchema
                    
                    
                    class checkInAttachments(
                        schemas.ListSchema
                    ):
                    
                    
                        class MetaOapg:
                            
                            @staticmethod
                            def items() -> typing.Type['CheckInAttachmentDetailEf244acfe6cf10002ebe92d43a7701d7']:
                                return CheckInAttachmentDetailEf244acfe6cf10002ebe92d43a7701d7
                    
                        def __new__(
                            cls,
                            arg: typing.Union[typing.Tuple['CheckInAttachmentDetailEf244acfe6cf10002ebe92d43a7701d7'], typing.List['CheckInAttachmentDetailEf244acfe6cf10002ebe92d43a7701d7']],
                            _configuration: typing.Optional[schemas.Configuration] = None,
                        ) -> 'checkInAttachments':
                            return super().__new__(
                                cls,
                                arg,
                                _configuration=_configuration,
                            )
                    
                        def __getitem__(self, i: int) -> 'CheckInAttachmentDetailEf244acfe6cf10002ebe92d43a7701d7':
                            return super().__getitem__(i)
                
                    @staticmethod
                    def participant() -> typing.Type['ParticipantB3a69f47a49910001687de1d4c75003c']:
                        return ParticipantB3a69f47a49910001687de1d4c75003c
                    date = schemas.DateSchema
                    id = schemas.StrSchema
                    __annotations__ = {
                        "description": description,
                        "associatedTopics": associatedTopics,
                        "creator": creator,
                        "archived": archived,
                        "checkInAttachments": checkInAttachments,
                        "participant": participant,
                        "date": date,
                        "id": id,
                    }
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["description"]) -> MetaOapg.properties.description: ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["associatedTopics"]) -> MetaOapg.properties.associatedTopics: ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["creator"]) -> 'CreatorB3a69f47a49910001687de28dd71003d': ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["archived"]) -> MetaOapg.properties.archived: ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["checkInAttachments"]) -> MetaOapg.properties.checkInAttachments: ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["participant"]) -> 'ParticipantB3a69f47a49910001687de1d4c75003c': ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["date"]) -> MetaOapg.properties.date: ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
            
            @typing.overload
            def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
            
            def __getitem__(self, name: typing.Union[typing_extensions.Literal["description", "associatedTopics", "creator", "archived", "checkInAttachments", "participant", "date", "id", ], str]):
                # dict_instance[name] accessor
                return super().__getitem__(name)
            
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["description"]) -> typing.Union[MetaOapg.properties.description, schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["associatedTopics"]) -> typing.Union[MetaOapg.properties.associatedTopics, schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["creator"]) -> typing.Union['CreatorB3a69f47a49910001687de28dd71003d', schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["archived"]) -> typing.Union[MetaOapg.properties.archived, schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["checkInAttachments"]) -> typing.Union[MetaOapg.properties.checkInAttachments, schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["participant"]) -> typing.Union['ParticipantB3a69f47a49910001687de1d4c75003c', schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["date"]) -> typing.Union[MetaOapg.properties.date, schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["id"]) -> typing.Union[MetaOapg.properties.id, schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
            
            def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["description", "associatedTopics", "creator", "archived", "checkInAttachments", "participant", "date", "id", ], str]):
                return super().get_item_oapg(name)
            
        
            def __new__(
                cls,
                *args: typing.Union[dict, frozendict.frozendict, ],
                description: typing.Union[MetaOapg.properties.description, str, schemas.Unset] = schemas.unset,
                associatedTopics: typing.Union[MetaOapg.properties.associatedTopics, list, tuple, schemas.Unset] = schemas.unset,
                creator: typing.Union['CreatorB3a69f47a49910001687de28dd71003d', schemas.Unset] = schemas.unset,
                archived: typing.Union[MetaOapg.properties.archived, bool, schemas.Unset] = schemas.unset,
                checkInAttachments: typing.Union[MetaOapg.properties.checkInAttachments, list, tuple, schemas.Unset] = schemas.unset,
                participant: typing.Union['ParticipantB3a69f47a49910001687de1d4c75003c', schemas.Unset] = schemas.unset,
                date: typing.Union[MetaOapg.properties.date, str, date, schemas.Unset] = schemas.unset,
                id: typing.Union[MetaOapg.properties.id, str, schemas.Unset] = schemas.unset,
                _configuration: typing.Optional[schemas.Configuration] = None,
                **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
            ) -> 'all_of_0':
                return super().__new__(
                    cls,
                    *args,
                    description=description,
                    associatedTopics=associatedTopics,
                    creator=creator,
                    archived=archived,
                    checkInAttachments=checkInAttachments,
                    participant=participant,
                    date=date,
                    id=id,
                    _configuration=_configuration,
                    **kwargs,
                )
        
        @classmethod
        @functools.lru_cache()
        def all_of(cls):
            # we need this here to make our import statements work
            # we must store _composed_schemas in here so the code is only run
            # when we invoke this method. If we kept this at the class
            # level we would get an error because the class level
            # code would be run when this module is imported, and these composed
            # classes don't exist yet because their module has not finished
            # loading
            return [
                cls.all_of_0,
            ]


    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'CheckInsSummaryB3a69f47a499100010ce6be72bfe001d':
        return super().__new__(
            cls,
            *args,
            _configuration=_configuration,
            **kwargs,
        )

from workday_staffing_python_sdk.model.associated_topics_summary_b3a69f47a4991000171aae4c5a810040 import AssociatedTopicsSummaryB3a69f47a4991000171aae4c5a810040
from workday_staffing_python_sdk.model.check_in_attachment_detail_ef244acfe6cf10002ebe92d43a7701d7 import CheckInAttachmentDetailEf244acfe6cf10002ebe92d43a7701d7
from workday_staffing_python_sdk.model.creator_b3a69f47a49910001687de28dd71003d import CreatorB3a69f47a49910001687de28dd71003d
from workday_staffing_python_sdk.model.participant_b3a69f47a49910001687de1d4c75003c import ParticipantB3a69f47a49910001687de1d4c75003c
